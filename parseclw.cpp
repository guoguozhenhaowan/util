#include <iostream>
#include <iomanip>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include "util.h"

/** function to parse MUSCLE MSA result file into a map
 * @param infile MUSCLE MSA result generated by arguments -diags -maxiters 2 -clw -quiet
 * @param alnMap map to store <seqid, seqalnstr> pairs
 */
void parseCLW(const std::string& infile, std::map<std::string, std::string>& alnMap){
    std::ifstream fr(infile);
    std::vector<std::string> strVec;
    std::string line;
    while(std::getline(fr, line)){
        if(util::ends_with(line, "multiple sequence alignment") || util::starts_with(line, " ") || line.length() == 0){
            continue;
        }
        util::split(line, strVec, " ");
        if(alnMap.find(strVec[0]) != alnMap.end()){
            alnMap[strVec[0]].append(strVec[1]);
        }else{
            alnMap[strVec[0]] = strVec[1];
        }
    }
    fr.close();
}

int main(int argc, char** argv){
    if(argc < 2){
        std::cout << argv[0] << " <inclustalw result> " << std::endl;
        return 0;
    }
    char* infile = argv[1];
    std::map<std::string, std::string> alnMap;
    parseCLW(infile, alnMap);
    for(auto& e: alnMap){
        std::cout << std::setw(5) << e.first << " : " << e.second << std::endl;
    }
}
    
